# Problem 2: Project Euler

# Each new term in the Fibonacci sequence is generated by adding the 
# previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
#		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not 
# exceed four million, find the sum of the even-valued terms.

terms = [1,2]

sumOfNum = 0
sumOfEvens = 0

while terms[0] < 4000000:
	sumOfNum = terms[0] + terms[1]
	terms.pop(0)
	terms.append(sumOfNum)

	if terms[0] % 2 == 0:
		sumOfEvens += terms[0]

	print terms[0] ," ", terms[1]

print "\n\n\nThe number is %d" % sumOfEvens



